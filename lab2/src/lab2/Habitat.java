package lab2;import personal.Developer;import personal.Human;import personal.Manager;import utils.Pair;import java.awt.*;import java.util.ArrayList;import java.util.Iterator;public class Habitat {    private ArrayList<Human> m_personal;    /*     * m_working_area_size:     * First  --- width     * Second --- height     */    private Pair<Integer, Integer> m_working_area_size;    private boolean m_show_time;    private boolean m_is_running;    private int m_simulation_time;    /*     * m_employees_counter && m_periods:     * First  --- Developer     * Second --- Manager     */    private Pair<Integer, Integer> m_employees_counter;    private Pair<Integer, Integer> m_periods;    private float m_developer_possibility;    private float m_max_percent_of_managers;    private Image m_dev_image;    private Image m_man_image;    public Habitat(int width, int height)    {        m_personal = new ArrayList<Human>();        m_working_area_size = new Pair<Integer, Integer>(width, height);        m_employees_counter = new Pair<Integer, Integer>(0, 0);        m_periods = new Pair<Integer, Integer>(5, 10);        m_show_time = false;        m_is_running = false;        m_simulation_time = 0;        m_developer_possibility = .8f;        m_max_percent_of_managers = .5f;        String dev_image_path = "linux_logo.jpg";        String man_image_path = "win_logo.jpg";        m_dev_image = Toolkit.getDefaultToolkit().getImage(dev_image_path);        m_man_image = Toolkit.getDefaultToolkit().getImage(man_image_path);    }    public void start()    {        m_is_running = true;        m_simulation_time = 0;    }    public void set_size(Pair<Integer, Integer> size)    {        m_working_area_size.first = size.first;        m_working_area_size.second = size.second;    }    public void stop()    {        m_is_running = false;        m_personal.clear();    }    public void paint(Graphics graphics)    {        if (m_is_running) {            Iterator<Human> it = m_personal.iterator();            while (it.hasNext()) {                Human h = it.next();                h.paint(graphics);            }            if (m_show_time) {                graphics.setColor(Color.RED);                String str = "Simulation time = " + m_simulation_time + " sec.";                graphics.drawString(str, 10, 10);            }        } else {            print_result(graphics);        }    }    public void update(int time)    {//        System.out.println("Update");        m_simulation_time = time;        int dev_update = m_simulation_time % m_periods.first;        int man_update = m_simulation_time % m_periods.second;        int pos_x = 0;        int pos_y = 0;//        System.out.println("Dev update: " + dev_update + "\nMan update: " + man_update);        if(dev_update == 0) {            if(Math.random() <= m_developer_possibility){                do {                    pos_x = (int)(Math.random() * m_working_area_size.first);                } while(pos_x == 0);                do {                    pos_y = (int)(Math.random() * m_working_area_size.second);                } while(pos_y == 0);                Human new_person = new Developer(pos_x, pos_y);                new_person.set_image(m_dev_image);                m_personal.add(new_person);                ++m_employees_counter.first;            }        }//        System.out.println("Positions: " + pos_x + " " + pos_y);        if(man_update == 0) {            boolean man_percent = false;            if(m_employees_counter.first > 0) {                man_percent = (m_employees_counter.second/(float)m_employees_counter.first < m_max_percent_of_managers);            }            if(man_percent){                do {                    pos_x = (int)(Math.random() * m_working_area_size.first);                } while(pos_x == 0);                do {                    pos_y = (int)(Math.random() * m_working_area_size.second);                } while(pos_y == 0);                Human new_person = new Manager(pos_x, pos_y);                new_person.set_image(m_man_image);                m_personal.add(new_person);                ++m_employees_counter.second;            }        }//        System.out.println("Positions: " +pos_x + " " + pos_y);    }    public void print_result(Graphics graphics)    {        graphics.setColor(Color.BLACK);        graphics.drawRoundRect(100, 100, 420, 260, 10, 10);        graphics.drawString("Результаты симуляции", 100, 85);        int count = m_employees_counter.first + m_employees_counter.second;        graphics.drawString("Number of created objects: " + count, 110, 120);        graphics.drawString("Number of Developers: " + m_employees_counter.first, 110, 170);        graphics.drawString("Number of Managers: " + m_employees_counter.second, 110, 240);        graphics.drawString("Elapsed time: " + m_simulation_time, 110, 310);    }    public void switch_show_time()    {        m_show_time = !m_show_time;    }}